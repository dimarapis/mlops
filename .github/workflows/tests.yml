name: "Run tests"

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    #name: ${{ matrix.os }}
    #runs-on: ${{ matrix.os }}
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8


    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_tests.txt

    - name: Build the Docker image
      run: |
        echo "$" | docker login \
          -u "$" --password-stdin docker.io
        docker build . --file dummy.dockerfile \
          --tag docker.io/$/$:$GITHUB_SHA
        docker push docker.io/$/$:$GITHUB_SHA

    #- name: Test with pytest
    #  run: |
    #    pip install pytest
    #    pytest -v

    #- name: Run isort
    #  run: |
    #    pip install isort
    #    isort .

    #- name: Run flake8
    #  run: |
    #    pip install flake8
    #    flake8 .
    # --sp=pyproject.toml -c

    #- name: Run mypy on src/models/*
    #  run: |
    #    pip install types-tqdm
    #    pip install mypy
    #    mypy src/models/model.py
    #    mypy src/models/predict_model.py
    #    mypy src/models/train_model.py



    - name: Generate Report
      run: |
        pip install pytest
        pip install coverage
        coverage run -m pytest tests/
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3.1.1
